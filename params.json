{"note":"Don't delete this file! It's used internally to help with page regeneration.","google":"","body":"## Pig Latin.\r\n\r\nAssuming we know basics of hadoop.\r\nPig is a higher level abstraction for data users over Hadoop, without needing to write data processing streams in lower level Java language. Pig has grown from 0.1 to 0.9 over last few years\r\n\r\n### What is Pig Latin\r\nPig is a syntax/engine, a language named Pig Latin to run parallel programs over hadoop. As any other language it has its own data operators and also some UDF (user defined functions) for specific purposes.\r\n\r\n> Pig is an Apache open source project. This means users are free to download it as source or binary, use it for themselves, contribute to it, and—under the terms of the Apache License—use it in their products and change it as they see fit.\r\n\r\n### Mapreduce\r\nMapreduce is a parallel data processing paradigm, its comprises of a set of jobs map, shuffle, reduce. Map part takes the raw inputs individually and processed them and buckets them w.r.t key-value. As the data and processed are distributed over several machines shuffle segregated data based on keys and reduce phase does the final manipulation of data and export out.\r\n\r\nIn Hadoop\r\n\r\nMapper: Takes InputFormat class for various input formats\r\nShuffle: Partioner class\r\nReduce: OutputFormat class\r\n\r\nPig generates a mapreduce layer over Hadoop, for processing\r\n```\r\n-- Load input from the file named Mary, and call the single\r\n-- field in the record 'line'.\r\ninput = load 'mary' as (line);\r\n-- TOKENIZE splits the line into a field for each word.\r\n-- flatten will take the collection of records returned by\r\n-- TOKENIZE and produce a separate record for each one, calling the single\r\n-- field in the record word.\r\nwords = foreach input generate flatten(TOKENIZE(line)) as word;\r\n-- Now group them together by each word.\r\ngrpd = group words by word;\r\n-- Count them.\r\ncntd = foreach grpd generate group, COUNT(words);\r\n-- Print out the results.\r\ndump cntd;\r\n````\r\n\r\n### Authors and Contributors\r\nNov 2012, Vidyasagar (@vidyasagar1729)","name":"Pig-latin","tagline":"Pig Latin"}